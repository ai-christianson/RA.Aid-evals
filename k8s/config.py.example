"""Configuration constants for RA-AID."""
import os
from pathlib import Path

# Master list of all tasks to process
MASTER_TASKS = [
    "scikit-learn__scikit-learn-25500",
    "sympy__sympy-18189",
    "psf__requests-2317",
    "django__django-11019",
    "sympy__sympy-13146",
    "sympy__sympy-12171",
    "scikit-learn__scikit-learn-13779",
    "django__django-16379",
    "astropy__astropy-7746",
    "pytest-dev__pytest-6116",
    "sympy__sympy-13480",
    "django__django-13551",
    "sphinx-doc__sphinx-8595",
    "django__django-12983",
    "pytest-dev__pytest-8906",
    "sphinx-doc__sphinx-8721",
    "sympy__sympy-22005",
    "sphinx-doc__sphinx-7738",
    "pallets__flask-4992",
    "pylint-dev__pylint-7228",
    "django__django-14730",
    "django__django-16595",
    "sympy__sympy-15011",
    "sympy__sympy-15308",
    "django__django-16041",
    "django__django-12856",
    "sympy__sympy-20639",
    "sympy__sympy-24066",
    "pydata__xarray-4094",
    "sympy__sympy-13647",
    "django__django-11564",
    "pylint-dev__pylint-7114",
    "django__django-12286",
    "django__django-11848",
    "sphinx-doc__sphinx-8435",
    "django__django-17087",
    "django__django-10924",
    "django__django-15347",
    "django__django-13028",
    "django__django-14534",
    "django__django-15498",
    "django__django-14667",
    "sympy__sympy-21614",
    "django__django-13660",
    "django__django-14672",
    "django__django-13768",
    "sympy__sympy-13177",
    "sympy__sympy-12454",
    "django__django-16408",
    "sympy__sympy-13031"
]

# Get batch size from environment with default of 50 (set to 5 externally if desired)
BATCH_SIZE = int(os.getenv("BATCH_SIZE", "50"))

# Get total number of tasks from environment or use the full length of MASTER_TASKS
NUM_TASKS = int(os.getenv("NUM_TASKS", str(len(MASTER_TASKS))))

assert len(MASTER_TASKS) == NUM_TASKS, (
    f"MASTER_TASKS length ({len(MASTER_TASKS)}) must exactly match NUM_TASKS ({NUM_TASKS})"
)

print(f"Batch Size: {BATCH_SIZE}")
print(f"Total Tasks: {NUM_TASKS}")

# Timeout Configuration (in seconds)
TIMEOUT = 45 * 60  # 45 minutes

# RA-AID Configuration

# Dynamic task assignment based on JOB_COMPLETION_INDEX
job_index = int(os.getenv("JOB_COMPLETION_INDEX", "0"))
start_idx = job_index * BATCH_SIZE
end_idx = start_idx + BATCH_SIZE
ONLY_TASKS = MASTER_TASKS[start_idx:end_idx]

print(f"JOB_COMPLETION_INDEX: {job_index}")
print(f"Processing batch {job_index + 1}")
print(f"Tasks in this batch: {len(ONLY_TASKS)}")
print(f"Task IDs: {ONLY_TASKS}")

FILTER_REPOS = None

# RA-AID Configuration
# RA_AID_PROVIDER = "anthropic"
# RA_AID_MODEL = "claude-3-5-sonnet-20241022"
RA_AID_PROVIDER = "openrouter"
RA_AID_MODEL = "anthropic/claude-3.5-sonnet"
RA_AID_TEMPERATURE = "1.0"

# Expert model configuration
RA_AID_EXPERT_PROVIDER = "openai"
RA_AID_EXPERT_MODEL = "o3-mini"

RA_AID_FULL_MODEL = f"{RA_AID_PROVIDER}/{RA_AID_MODEL}"
RA_AID_AIDER_MODEL = RA_AID_FULL_MODEL  # Use same model for aider

# Whether to stream ra-aid output to console while capturing
STREAM_OUTPUT = True

# Directory Configuration
REPOS_DNAME = Path("repos")
PREDS_DNAME = Path("predictions")

# Processing Configuration
MAX_ATTEMPTS = 3
MAX_THREADS = 1

# Default RA-AID version if detection fails
DEFAULT_RA_AID_VERSION = "ra-aid 0.14.1"

# Submission checklist:
# https://github.com/swe-bench/experiments/blob/main/checklist.md
# When True, excludes FAIL_TO_PASS and PASS_TO_PASS test details from prompts
# Sets env variable TAVILY_API_KEY to empty str to avoid web search
# Sets MAX_ATTEMPTS to 1, that is the submission rules: pass@1
# Final rule is to not pass the hints, we already don't use hints in the prompt, enabled or not.
SUBMISSION_MODE = True
if SUBMISSION_MODE:
    MAX_ATTEMPTS = 1
