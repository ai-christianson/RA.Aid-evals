---
- name: Deploy RA.Aid evaluation job to Kubernetes
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - "{{ values_file | default('values.yaml') }}"

  tasks:
    - name: Validate required environment variables
      ansible.builtin.assert:
        that:
          - lookup('env', 'ANTHROPIC_API_KEY') | length > 0
          - lookup('env', 'OPENAI_API_KEY') | length > 0
          - lookup('env', 'TAVILY_API_KEY') | length > 0
          - lookup('env', 'OPENROUTER_API_KEY') | length > 0
          - not (s3.enabled | bool) or (lookup('env', 'AWS_ACCESS_KEY_ID') | length > 0 and lookup('env', 'AWS_SECRET_ACCESS_KEY') | length > 0)
        fail_msg: |
          Missing required environment variables. Please ensure the following are set:
          - ANTHROPIC_API_KEY
          - OPENAI_API_KEY
          - TAVILY_API_KEY
          - OPENROUTER_API_KEY
          {% if s3.enabled | bool %}
          - AWS_ACCESS_KEY_ID
          - AWS_SECRET_ACCESS_KEY
          {% endif %}
        success_msg: All required environment variables are present

    - name: Ensure namespace exists
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ job.namespace }}"

    - name: Create API key secrets from environment variables
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: api-keys
            namespace: "{{ job.namespace }}"
          type: Opaque
          stringData:
            ANTHROPIC_API_KEY: "{{ lookup('env', 'ANTHROPIC_API_KEY') }}"
            OPENAI_API_KEY: "{{ lookup('env', 'OPENAI_API_KEY') }}"
            TAVILY_API_KEY: "{{ lookup('env', 'TAVILY_API_KEY') }}"
            OPENROUTER_API_KEY: "{{ lookup('env', 'OPENROUTER_API_KEY') }}"

    - name: Create S3 secrets from environment variables
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: ra-aid-secrets
            namespace: "{{ job.namespace }}"
          type: Opaque
          stringData:
            aws_access_key_id: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') | default('', true) }}"
            aws_secret_access_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') | default('', true) }}"
            anthropic_api_key: "{{ lookup('env', 'ANTHROPIC_API_KEY') }}"
            openai_api_key: "{{ lookup('env', 'OPENAI_API_KEY') }}"
            tavily_api_key: "{{ lookup('env', 'TAVILY_API_KEY') }}"
            openrouter_api_key: "{{ lookup('env', 'OPENROUTER_API_KEY') }}"
      when: s3.enabled | bool

    - name: Check if config.py exists
      stat:
        path: "config.py"
      register: config_file

    - name: Fail if config.py doesn't exist
      fail:
        msg: "config.py not found in k8s directory. Please copy config.py.example to config.py and modify as needed."
      when: not config_file.stat.exists

    - name: Read config.py content
      slurp:
        src: "config.py"
      register: config_py_slurp

    - name: Set config.py content variable
      set_fact:
        config_py_content: "{{ config_py_slurp['content'] | b64decode }}"

    - name: Create ConfigMap for SWE-bench config
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'configmap.yml.j2') | from_yaml }}"

    - name: Deploy evaluation job
      kubernetes.core.k8s:
        state: present
        template: "job.yml.j2"
