apiVersion: batch/v1
kind: Job
metadata:
  name: {{ job.name }}
  namespace: {{ job.namespace }}
spec:
  backoffLimit: {{ job.backoffLimit }}
  ttlSecondsAfterFinished: {{ job.ttlSecondsAfterFinished }}
  template:
    spec:
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 30
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - {{ job.nodeAffinity.zone | default('us-east-dc-cygnus') }}
      volumes:
        - name: docker-socket
          emptyDir: {}
        - name: docker-storage
          emptyDir: {}
        - name: config-volume
          configMap:
            name: swe-bench-config
      containers:
        - name: ra-aid-eval
          image: {{ image.repository }}:{{ image.tag }}
          imagePullPolicy: {{ image.pullPolicy }}
          securityContext:
            capabilities:
              add: ["SYS_PTRACE"]
          command: ["/app/run.sh"]
          resources:
            requests:
              memory: {{ job.resources.requests.memory }}
              cpu: {{ job.resources.requests.cpu }}
            limits:
              memory: {{ job.resources.limits.memory }}
              cpu: {{ job.resources.limits.cpu }}
          envFrom:
            - secretRef:
                name: api-keys
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: ENABLE_EVAL
              value: "{{ job.evalEnabled | default('true') }}"
            - name: IMAGE_NAME
              value: "{{ image.repository }}"
            - name: IMAGE_TAG
              value: "{{ image.tag }}"
            - name: AIDER_FLAGS
              value: "--no-detect-urls"
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ra-aid-secrets
                  key: anthropic_api_key
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ra-aid-secrets
                  key: openai_api_key
            - name: TAVILY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ra-aid-secrets
                  key: tavily_api_key
            - name: S3_ENABLED
              value: "{{ (s3.enabled | default(false)) | lower }}"
            - name: S3_BUCKET_NAME
              value: "{{ s3.bucket | default('') }}"
            - name: S3_ENDPOINT_URL
              value: "{{ s3.endpoint_url | default('') }}"
            - name: S3_PATH_PREFIX
              value: "{{ s3.path_prefix | default('') }}"
            - name: AWS_DEFAULT_REGION
              value: "{{ s3.region | default('') }}"
            - name: AWS_RETRY_MODE
              value: "standard"
            - name: AWS_MAX_ATTEMPTS
              value: "3"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ra-aid-secrets
                  key: aws_access_key_id
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: ra-aid-secrets
                  key: aws_secret_access_key
                  optional: true
            - name: DOCKER_HOST
              value: "unix:///dind-socket/docker.sock"
          volumeMounts:
            - name: docker-socket
              mountPath: /dind-socket
            - name: config-volume
              mountPath: /app/swe-bench/swe_lite_ra_aid/config.py
              subPath: config.py
        - name: dind-daemon
          image: docker:20.10-dind
          securityContext:
            privileged: true
          args: ["--host=unix:///dind-socket/docker.sock"]
          volumeMounts:
            - name: docker-socket
              mountPath: /dind-socket
            - name: docker-storage
              mountPath: /var/lib/docker
      restartPolicy: Never
